{"version":3,"sources":["../webpack/bootstrap",".././src/Snippet.ts",".././src/SnippetManager.ts",".././src/WebviewManager.ts",".././src/extension.ts","../external \"fs\"","../external \"path\"","../external \"vscode\""],"names":[],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/extension.ts\");\n","export default class Snippet {\n    constructor(\n        readonly attributes: any\n    ) {}\n\n    get title (): string { return this.attributes.title; }\n    get code (): string { return this.attributes.code; }\n    get type (): string { return this.attributes.type; }\n    get tags (): Array<object> { return this.attributes.tags; }\n    get meta (): Array<any> { return this.attributes.meta; }\n    get desc (): string { return this.attributes.description; }\n\n    get toArray (): any { return this.attributes; }\n}","import * as vscode from 'vscode';\n\nimport Snippet from './Snippet';\n\nexport default class SnippetManager {\n\n    public static COPY_SNIPPET = 'snippetify.snippet.copy';\n    public static SAVE_SNIPPET = 'snippetify.snippet.save';\n\n    static instance: SnippetManager;\n\n    constructor(readonly ctx: vscode.ExtensionContext) {\n        this.registerCommands();\n    }\n\n    static create(ctx: vscode.ExtensionContext): SnippetManager {\n        if (!this.instance) { this.instance = new SnippetManager(ctx); }\n        return this.instance;\n    }\n\n    private saveSnippet (snippet: Snippet) {\n        console.log('saveeeeeee');\n        vscode.window.showErrorMessage('received message');\n    }\n\n    private copySnippet (snippet: Snippet) {\n        console.log('copyyyyyy....');\n    }\n\n    private registerCommands () {\n        this.ctx.subscriptions.push(vscode.commands.registerCommand(SnippetManager.SAVE_SNIPPET, (snippet: Snippet) => {\n            this.saveSnippet(snippet);\n        }));\n        this.ctx.subscriptions.push(vscode.commands.registerCommand(SnippetManager.COPY_SNIPPET, (snippet: Snippet) => {\n            this.copySnippet(snippet);\n        }));\n    }\n}","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as vscode from 'vscode';\n\nimport Snippet from './Snippet';\nimport SnippetManager from './SnippetManager';\n\nclass WebviewManager {\n\n    private SNIPPET_SAVE: string = 'snippetify.webview.save_snippet';\n    private SNIPPET_SHOW: string = 'snippetify.webview.search_snippet';\n    private SNIPPET_SEARCH: string = 'snippetify.webview.show_snippet';\n\n    static instance: WebviewManager;\n    private webviewPanel?: vscode.WebviewPanel = undefined;\n\n    constructor(readonly ctx: vscode.ExtensionContext) {\n        this.registerCommands();\n    }\n\n    static create(ctx: vscode.ExtensionContext): WebviewManager {\n        if (!this.instance) { this.instance = new WebviewManager(ctx); }\n        return this.instance;\n    }\n\n    private launchWebview (snippet?: Snippet, meta: object = {}) {\n        if (!this.webviewPanel) {\n            this.webviewPanel = vscode.window.createWebviewPanel(\n                'snippetify',\n                'Snippetify',\n                vscode.ViewColumn.Beside,\n                {\n                    enableScripts: true,\n                    localResourceRoots: [vscode.Uri.file(path.join(this.ctx.extensionPath, 'dist'))]\n                }\n            );\n        }\n        this.hydrateWebview(snippet, meta);\n    }\n\n    private hydrateWebview (snippet?: Snippet, meta: object = {}) {\n        fs.readFile(path.join(this.ctx.extensionPath, 'dist', 'html', 'index.html'), (err, data) => {\n            \n            if (!this.webviewPanel) { return; }\n\n            const token    = '';\n            const webview  = this.webviewPanel.webview;\n            const htmlPath = webview.asWebviewUri(vscode.Uri.file(path.join(this.ctx.extensionPath, 'dist/html')));\n            webview.html   = String(data)\n                .replace(/src=\\//g, `src=${htmlPath}/`)\n                .replace(/href=\\//g, `href=${htmlPath}/`)\n                .replace(/__cspSource__/g, String(webview.cspSource))\n                .replace('</head>', `\n                    <script>\n                        (function() {\n                            window.snippetify = {\n                                meta: '${meta}',\n                                token: '${token}',\n                                snippet: ${snippet?.toArray()},\n                                projectPath: '${htmlPath}',\n                                vscode: acquireVsCodeApi()\n                            };\n                        }())\n                    </script>\n                    </head>\n                `);\n            \n            webview.onDidReceiveMessage(e => {\n                switch (e.action) {\n                    case 'save':\n                        vscode.commands.executeCommand(SnippetManager.SAVE_SNIPPET, new Snippet(e.snippet));\n                        break;\n                    case 'copy':\n                        vscode.commands.executeCommand(SnippetManager.COPY_SNIPPET, new Snippet(e.snippet));\n                        break;\n                    case 'show':\n                        vscode.window.showInformationMessage('show snippet');\n                        console.log(JSON.stringify(e.snippet));\n                        this.showSnippet(new Snippet(e.snippet));\n                        break;\n                    case 'close':\n                        this.webviewPanel?.dispose();\n                        break;\n                    case 'alert':\n                        if (e.type === 'error') { vscode.window.showErrorMessage(e.message); }\n                        else if (e.type === 'success') { vscode.window.showInformationMessage(e.message); }\n                        break;\n                }\n            }, undefined, this.ctx.subscriptions);\n        });\n    }\n\n    public showSnippet (snippet?: Snippet, meta: object = {}) {\n        this.launchWebview(snippet, { page: 'show', ...meta });\n    }\n\n    public searchSnippets (meta: object = {}) {\n        this.launchWebview(undefined, { page: 'index', ...meta });\n    }\n\n    public saveSnippet (snippet?: Snippet, meta: object = {}) {\n        this.launchWebview(snippet, { page: 'new', ...meta });\n    }\n\n    private registerCommands () {\n        this.ctx.subscriptions.push(vscode.commands.registerCommand(this.SNIPPET_SAVE, (snippet?: Snippet, meta: object = {}) => {\n            this.saveSnippet(snippet, meta);\n        }));\n        this.ctx.subscriptions.push(vscode.commands.registerCommand(this.SNIPPET_SHOW, (snippet?: Snippet, meta: object = {}) => {\n            this.showSnippet(snippet, meta);\n        }));\n        this.ctx.subscriptions.push(vscode.commands.registerCommand(this.SNIPPET_SEARCH, (meta: object = {}) => {\n            this.searchSnippets(meta);\n        }));\n    }\n\n    get panel () {\n        return this.webviewPanel;\n    }\n}\n\nexport default WebviewManager; ","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\nimport WebviewManager from './WebviewManager';\nimport SnippetManager from './SnippetManager';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"snippetify\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposable = vscode.commands.registerCommand('snippetify.helloWorld', () => {\n\t\t// The code you place here will be executed every time your command is executed\n\n\t\t// Display a message box to the user\n\t\tvscode.window.showInformationMessage('Hello World from Snippetify!');\n\t});\n\n\t// Webview manager\n\tWebviewManager.create(context);\n\tSnippetManager.create(context);\n\tcontext.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"vscode\");"],"sourceRoot":""}